apply plugin: 'eclipse'
apply plugin: 'idea'

def WEB_PORT   = 5004
def ADMIN_PORT = 5005

buildscript {
    ext {
        REPOS = {
            mavenLocal()
            mavenCentral()
            maven { url "http://repo.maven.apache.org/maven2" }
            maven { url 'http://repo.spring.io/plugins-release' }
            maven { url "https://plugins.gradle.org/m2/" }
        }
    }

    repositories REPOS
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE')
        classpath('org.springframework.build.gradle:propdeps-plugin:0.0.7')
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.11"
        classpath 'com.eriwen:gradle-css-plugin:2.12.0'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

allprojects {
//    apply plugin: 'java'
//    apply plugin: 'maven'
    //apply plugin: 'propdeps'
//    apply plugin: 'propdeps-maven'
//    apply plugin: 'propdeps-idea'
//    apply plugin: 'propdeps-eclipse'
//    apply plugin: "com.gorylenko.gradle-git-properties"
//
//    group = 'com.example.gyazo'
//    version = "0.1-SNAPSHOT"
//
//    repositories REPOS
//
//    dependencies {
//        compile('org.projectlombok:lombok:1.16.4')
//        compile('com.fasterxml.jackson.core:jackson-core:2.7.2')
//        compile('com.fasterxml.jackson.core:jackson-annotations:2.7.2')
//        compile('com.fasterxml.jackson.core:jackson-databind:2.7.2')
//    }
}

project(":common") {
    description = 'gyazo common'

    apply plugin: 'java'
    apply plugin: 'spring-boot'
    apply plugin: 'css'
    apply plugin: 'propdeps'

    configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
    }

    dependencies {
        optional('org.springframework.boot:spring-boot-configuration-processor')

        compile('org.springframework.boot:spring-boot-starter-jetty')
        compile('org.springframework.boot:spring-boot-starter-freemarker')
        compile('org.springframework.boot:spring-boot-starter-web')

        compile('org.springframework.boot:spring-boot-starter-actuator')
        compile('org.jolokia:jolokia-core:1.3.3')

        compile('mysql:mysql-connector-java:5.1.37')

        compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1')
        compile 'ch.qos.logback:logback-classic:1.1.3'

        // mybatis ?
        //compile('org.springframework.boot:spring-boot-starter-jdbc')
        //compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.2.0')
        //compile('org.springframework.boot:spring-boot-starter-web')
        //runtime('mysql:mysql-connector-java')
        //testCompile('org.springframework.boot:spring-boot-starter-test')

        // lombok
        compile('org.projectlombok:lombok:1.16.4')

        compile('org.springframework.boot:spring-boot-starter-jdbc') {
            exclude module: "tomcat-jdbc"
        }
    }

    compileJava.dependsOn(processResources)

    // this project is an abstract project. do not packaging as spring boot app.
    bootRepackage.enabled = false
}

project(":web") {
    description = 'gyazo web'

    apply plugin: 'java'
    apply plugin: 'spring-boot'
    apply plugin: 'css'
    apply plugin: 'propdeps'

    dependencies {
        compile project(':common')

    }

    bootRun {
        // load templates from source directory for fast development
        systemProperties System.properties
        systemProperty "server.port", WEB_PORT
    }
}
project(":admin") {
    description = 'gyazo admin'

    apply plugin: 'java'
    apply plugin: 'spring-boot'
    apply plugin: 'css'
    apply plugin: 'propdeps'

    dependencies {
        compile project(':common')

    }

    bootRun {
        // load templates from source directory for fast development
        systemProperties System.properties
        systemProperty "server.port", ADMIN_PORT

        systemProperties System.properties
        systemProperty "spring.freemarker.templateLoaderPath", "file:${project.rootDir}/common/src/main/resources/templates/,file:${project.projectDir}/src/main/resources/templates/,classpath:/templates/"
    }
}
subprojects {
    apply plugin: 'java'
    apply plugin: 'spring-boot'
    apply plugin: 'io.spring.dependency-management'

//     [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-parameters"
    }

    tasks.withType(Test) {
        if (System.getenv('SPRING_PROFILES_ACTIVE') == null) {
            environment SPRING_PROFILES_ACTIVE: 'local-test'
        } else {
            environment SPRING_PROFILES_ACTIVE: System.getenv('SPRING_PROFILES_ACTIVE') + '-test'
        }
    }

    tasks.withType(org.springframework.boot.gradle.run.BootRunTask) {
        systemProperties System.properties
        if (project.hasProperty('args')) {
            args project.args.split('\\s+')
        }
        if (System.getenv('SPRING_PROFILES_ACTIVE') == null) {
            environment SPRING_PROFILES_ACTIVE: 'local'
        }
    }
}
